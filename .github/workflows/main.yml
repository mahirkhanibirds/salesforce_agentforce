name: Deploy Only Last Salesforce Change

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2   # Needed to compare last 2 commits (HEAD & HEAD~1)

      # Step 2: Install Salesforce CLI
      - name: Install Salesforce CLI
        run: npm install @salesforce/cli --global

      # Step 3: Authenticate to Salesforce
      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > auth_url.txt
          sf org login sfdx-url -f auth_url.txt -a MySandbox

      # Step 4: Detect only last commit Salesforce changes
      - name: Detect Salesforce metadata changes
        id: changes
        run: |
          echo "🔍 Checking last commit changes..."
          CHANGED=$(git diff --name-only HEAD~1 HEAD -- force-app/ | grep -E '\.cls$|\.trigger$|\.xml$|\.js$|\.html$|\.cmp$|\.page$' || true)

          if [ -z "$CHANGED" ]; then
            echo "No Salesforce changes found in last commit."
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Salesforce files changed in last commit:"
            echo "$CHANGED"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "files=$CHANGED" >> $GITHUB_OUTPUT
          fi

      # Step 5: Deploy only the changed Salesforce components
      - name: Deploy changed Salesforce files
        if: steps.changes.outputs.changed == 'true'
        run: |
          echo "Files to deploy: $FILES"
          sf project deploy start --source-dir $FILES -o MySandbox --ignore-conflicts --wait 10

      # Step 6: Skip if no changes
      - name: No deployment required
        if: steps.changes.outputs.changed == 'false'
        run: echo "✅ No Salesforce files changed in the last commit. Skipping deployment."
