name: Deploy Only Changed Salesforce Files

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout full repo history (needed for git diff)
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Install Salesforce CLI
      - name: Install Salesforce CLI
        run: npm install @salesforce/cli --global

      # Step 3: Authenticate to Salesforce Org
      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > auth_url.txt
          sf org login sfdx-url -f auth_url.txt -a MySandbox

      # Step 4: Detect changed Salesforce files in last commit
      - name: Detect Salesforce metadata changes
        id: changes
        run: |
          echo "🔍 Checking for changed Salesforce files..."

          # Get all changed files from the latest commit safely
          CHANGED=$(git diff-tree --no-commit-id --name-only -r HEAD -- force-app/ | grep -E '\.(cls|trigger|xml|js|html|cmp|page|app|css)$' || true)

          if [ -z "$CHANGED" ]; then
            echo "✅ No Salesforce metadata changes found."
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "---------------------------------------"
            echo "📂 Files changed in last commit:"
            echo "---------------------------------------"
            echo "$CHANGED" | while read file; do
              echo "➡️  $file"
            done
            echo "---------------------------------------"

            # Output list for next step
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "files<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGED" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      # Step 5: Deploy only changed files to Salesforce Org
      - name: Deploy changed metadata to Salesforce
        if: steps.changes.outputs.changed == 'true'
        run: |
          echo "🚀 Deploying changed files to MySandbox..."

          # Maintain Salesforce folder structure
          mkdir -p changed/force-app
          
          echo "${{ steps.changes.outputs.files }}" | while read file; do
            mkdir -p "changed/$(dirname "$file")"
            cp "$file" "changed/$file"
          done

          echo "📦 Files ready for deployment:"
          find changed -type f

          # Deploy only changed metadata
          sf project deploy start -d changed/force-app -o MySandbox --ignore-conflicts --wait 10

      # Step 6: Skip deployment if no changes
      - name: Skip deployment
        if: steps.changes.outputs.changed != 'true'
        run: echo "✅ No Salesforce files changed. Deployment skipped."
